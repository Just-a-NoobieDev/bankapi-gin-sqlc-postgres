basePath: /api/v1
definitions:
  api.createAccountRequest:
    properties:
      currency:
        type: string
      name:
        type: string
    required:
    - currency
    - name
    type: object
  api.createTransferRequest:
    properties:
      amount:
        type: integer
      currency:
        type: string
      from_account_id:
        minimum: 1
        type: integer
      to_account_id:
        minimum: 1
        type: integer
    required:
    - amount
    - currency
    - from_account_id
    - to_account_id
    type: object
  api.createUserRequest:
    properties:
      email:
        type: string
      full_name:
        type: string
      password:
        minLength: 6
        type: string
      password_again:
        type: string
      username:
        type: string
    required:
    - email
    - full_name
    - password
    - password_again
    - username
    type: object
  api.createUserResponse:
    properties:
      email:
        type: string
      full_name:
        type: string
      username:
        type: string
    type: object
  api.depositRequest:
    properties:
      amount:
        type: integer
      id:
        minimum: 1
        type: integer
    required:
    - amount
    - id
    type: object
  db.Account:
    properties:
      balance:
        type: integer
      created_at:
        type: string
      currency:
        type: string
      id:
        type: integer
      name:
        type: string
    type: object
  db.Entry:
    properties:
      account_id:
        type: integer
      amount:
        description: Can be negative or positive value
        type: integer
      created_at:
        type: string
      id:
        type: integer
    type: object
  db.Transfer:
    properties:
      amount:
        description: Must be positive value
        type: integer
      created_at:
        type: string
      from_account_id:
        type: integer
      id:
        type: integer
      to_account_id:
        type: integer
    type: object
host: localhost:8080
info:
  contact: {}
  description: A simple bank API using Go, gin-gonic framework, postgresql and sqlc
  title: Simple Bank API
  version: "1.0"
paths:
  /accounts:
    get:
      description: Get a list of accounts with pagination
      parameters:
      - in: query
        minimum: 1
        name: page
        required: true
        type: integer
      - in: query
        maximum: 10
        minimum: 5
        name: size
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/db.Account'
            type: array
      summary: Get a list of accounts
      tags:
      - accounts
  /accounts/{id}:
    delete:
      description: Delete an account by the specified ID
      parameters:
      - in: path
        minimum: 1
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
      summary: Delete an account by ID
      tags:
      - accounts
    get:
      description: Get an account by the specified ID
      parameters:
      - in: path
        minimum: 1
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/db.Account'
      summary: Get an account by ID
      tags:
      - accounts
  /accounts/deposit:
    post:
      description: Deposit money to an account by the specified ID
      parameters:
      - description: Deposit Request
        in: body
        name: account
        required: true
        schema:
          $ref: '#/definitions/api.depositRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/db.Account'
      summary: Deposit money to an account
      tags:
      - accounts
  /acounts:
    post:
      description: Create a new account with the specified name and currency
      parameters:
      - description: Create Account Request
        in: body
        name: account
        required: true
        schema:
          $ref: '#/definitions/api.createAccountRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/db.Account'
      summary: Create a new account
      tags:
      - accounts
  /entry:
    get:
      description: Get a list of entries by account with pagination
      parameters:
      - in: query
        minimum: 1
        name: id
        required: true
        type: integer
      - in: query
        minimum: 1
        name: page
        required: true
        type: integer
      - in: query
        maximum: 10
        minimum: 1
        name: size
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/db.Entry'
            type: array
      summary: Get a list of entries by account
      tags:
      - entries
  /transfers:
    get:
      description: Get transfers by the specified account ID
      parameters:
      - in: query
        minimum: 1
        name: id
        required: true
        type: integer
      - in: query
        minimum: 1
        name: page
        required: true
        type: integer
      - in: query
        maximum: 10
        minimum: 1
        name: size
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/db.Transfer'
            type: array
      summary: Get transfers by account ID
      tags:
      - transfers
    post:
      description: Create a new transfer between two accounts
      parameters:
      - description: Create Transfer Request
        in: body
        name: transfer
        required: true
        schema:
          $ref: '#/definitions/api.createTransferRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/db.Transfer'
      summary: Create a new transfer
      tags:
      - transfers
  /transfers/{id}:
    get:
      description: Get a transfer by the specified ID
      parameters:
      - in: path
        minimum: 1
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/db.Transfer'
      summary: Get a transfer by ID
      tags:
      - transfers
  /users/register:
    post:
      description: Create a new user with the specified username, full name, email
        and password
      parameters:
      - description: Create User Request
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/api.createUserRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.createUserResponse'
      summary: Create a new user
      tags:
      - users
swagger: "2.0"
